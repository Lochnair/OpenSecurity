buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'

if (System.getenv().BUILD_NUMBER != null)
	ext.buildNumber = System.getenv().BUILD_NUMBER?.toInteger()
else
ext.buildNumber = 0

version = "1.0"
group= "pcl.OpenSecurity" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "OpenSecurity-1.10.2"

sourceCompatibility = targetCompatibility = "1.7" // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = "1.7"
}

minecraft {
    version = "1.10.2-12.18.3.2185"
    runDir = "run"
    
    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not allways work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "snapshot_20161111"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

repositories {
    maven {
        name = "OC repo"
        url = "http://maven.cil.li/"
    }
}

dependencies {
    compile "li.cil.oc:OpenComputers:MC1.10.2-1.6.1.64-dev"

}

sourceSets.main.java.srcDir("./src/externs/java")

jar.doFirst {
    for (String s : new File("./src/externs/java").list())
        delete new File(sourceSets.main.output.classesDir, s);
}

jar.classifier = "${ext.buildNumber}"
jar.manifest = manifest { attributes(
    "FMLCorePlugin": "pcl.opensecurity.util.SoundUnpack",
    "FMLCorePluginContainsFMLMod": "icanhazfmlmodpweeze"
) }

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
